# Schema version for compatibility tracking
version: "1.0.0"

# Overall session structure definition
session_structure:
  # Metadata will be persisted on executions (all fields optional)
  description: string         # Detailed description of the session
  metadata:
    tags: list[string]          # List of categorization tags
    owner: string               # Owner/creator of the session
    version: string             # Version of this specific session definition
    # Additional arbitrary metadata fields allowed

  # Core session configuration
  model: string                 # Default LLM model to use
  temperature: float            # Default temperature (0.0-1.0), optional
  max_tokens: integer           # Maximum tokens for responses, optional

  # Available tools and resources
  tools: list[string|object]    # List of tool identifiers or tool configs
  resources: list[string|object] # List of resource identifiers or configs

  # Schema validation (optional)
  input_schema: string          # Registered schema name for session input
  output_schema: string         # Registered schema name for session output

  # Execution behavior
  error_handling:               # Default error handling strategy
    strategy: string            # One of: "fail", "retry", "continue", "fallback"
    max_retries: integer        # Maximum number of retry attempts
    fallback_step: string       # Step ID to jump to on failure

  # Execution flow
  steps: list[step]             # Ordered list of execution steps


# Detailed documentation of available step types
step_types:
  - message:                    # Print message with specified role
      fields:
        - role: string          # One of: "system", "user", "assistant"
        - content: string       # Text content of the message

  - prompt:                     # Generate completion from LLM
      fields:
        - content: string       # Direct content to use as prompt
        - template: string      # Registered template name to use
        - template_args: object # Arguments to pass to the template
        - input_schema: string  # Schema to validate template_args
        - output_schema: string # Schema to validate LLM response
        - config: object        # Step-specific configuration overrides
        - error_handling: object # Step-specific error handling

  - user_input:                 # Wait for manual input from user
      fields:
        - prompt: string        # Text to display to user when requesting input
        - template: string      # Template to format user input
        - input_schema: string  # Schema to validate user input
        - config: object        # Step-specific configuration
        - output_schema: string # Schema to validate processed input
        - error_handling: object # Step-specific error handling

  - invoke:                     # Call code function
      fields:
        - callable: string      # Function identifier to call
        - args: object          # Arguments to pass to function
        - input_schema: string  # Schema to validate args
        - output_schema: string # Schema to validate function result
        - error_handling: object # Step-specific error handling


# Common structure for all step types
step_structure:
  name: string                 # Concise descriptive name
  description: string          # Detailed purpose of the step
  type: string                 # One of the defined step types
  enabled: boolean             # Whether the step is active (default: true)

  # Step type-specific fields (only relevant fields for the chosen type are used)
  role: string                 # For message steps: user, assistant, system
  content: string              # Text content for message or prompt
  template: string             # Registered template name
  template_args: object        # Args to pass to template
  input_schema: string         # Registered input schema name
  output_schema: string        # Registered output schema name
  callable: string             # Function to call for invoke steps
  args: object                 # Arguments for invoke steps

  # Step-specific metadata
  metadata: object             # Additional information for tracking/debugging

  # Error handling for this step
  error_handling:
    strategy: string           # One of: "fail", "retry", "continue", "fallback"
    max_retries: integer       # Maximum retry attempts
    fallback_step: string      # Step ID to execute on failure

  # Configuration overrides for this step
  config:
    model: string                   # Override default model
    temperature: float              # Override default temperature
    max_tokens: integer             # Override default max tokens
    tools: list[string|object]      # Override or extend available tools
    tool_merge_strategy: string     # One of: "replace", "append", "prepend"
    resources: list[string|object]  # Override or extend available resources
    resource_merge_strategy: string # One of: "replace", "append", "prepend"
