name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install dependencies
      run: ~/.cargo/bin/uv sync --system

    - name: Install just
      run: sudo apt-get update && sudo apt-get install -y just

    - name: Set up test database
      env:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: app # The main db name, setup-test-db uses this to connect initially
        POSTGRES_DB_test: app_test # The test db name
      run: just setup-test-db

    - name: Run tests
      env:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: app_test # Connect tests to the test db
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: just test
