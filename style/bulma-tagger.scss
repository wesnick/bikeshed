@charset "utf-8";
@use "sass:color";
@use "bulma/sass/utilities/css-variables" as cv;
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/utilities/controls" as mx;

// Import your base styles, assuming they're in a file called 'variables'
@use "variables" as *;

@use "bulma/sass/form/shared" as form;

// Variables with namespace
$tagsinput-selected-background-color: $primary !default;
$tagsinput-duplicate-animation: blinker .75s linear infinite !default;

// Tagger component styling
.tags-input {
  @extend input;
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  height: auto;
  min-height: 2.5em;
  padding: 0.25em 0.5em;
  position: relative;
  
  .tag {
    font-size: 0.875rem;
    margin: 0.125rem;
    padding: 0.25em 0.5em;
    border-radius: var(--bulma-radius-small, 4px);
    
    &.is-rounded {
      border-radius: 290486px;
    }
    
    &:hover {
      cursor: pointer;
    }
    
    &.is-selected {
      background-color: $tagsinput-selected-background-color;
      color: color.invert($tagsinput-selected-background-color);
    }
    
    &.is-duplicate {
      animation: $tagsinput-duplicate-animation;
    }
    
    .delete {
      margin-left: 0.25em;
      
      &:hover {
        background-color: color.adjust(dv.$primary, $lightness: -10%);
      }
    }
  }
  
  .input {
    border: none;
    box-shadow: none;
    display: inline-block;
    flex: 1 0 auto;
    height: 2em;
    margin: 0.125rem;
    padding: 0.25em;
    width: auto;
    background-color: transparent;
    
    &:focus {
      outline: none;
    }
  }
  
  &.is-filter {
    input {
      color: var(--bulma-input-color, #363636);
      
      &::placeholder {
        color: var(--bulma-input-placeholder-color, rgba(54, 54, 54, 0.3));
      }
    }
  }
  
  &.no-input {
    input {
      color: transparent;
      text-shadow: 0 0 0 var(--bulma-input-placeholder-color, rgba(54, 54, 54, 0.3));
      
      &::placeholder {
        color: var(--bulma-input-placeholder-color, rgba(54, 54, 54, 0.3));
        text-shadow: none;
      }
    }
  }
  
  .dropdown-menu {
    width: 100%;
    margin-top: 0.25rem;
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 20;
    display: none;
    
    .dropdown-content {
      max-height: 250px;
      overflow: hidden;
      overflow-y: auto;
      padding: 0.5rem 0;
      background-color: var(--bulma-scheme-main, white);
      border: 1px solid var(--bulma-border, #dbdbdb);
      border-radius: var(--bulma-radius, 4px);
      box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1);
      
      &.is-loading {
        &::after {
          @extend %loader;
          left: 50%;
          position: absolute !important;
          top: 50%;
          transform: translate(-50%, -50%);
          z-index: 4;
        }
        
        &::before {
          background-color: rgba(var(--bulma-scheme-main-rgb, 255, 255, 255), 0.5);
          content: "";
          height: 100%;
          left: 0;
          position: absolute;
          top: 0;
          width: 100%;
          z-index: 3;
        }
      }
    }
    
    .dropdown-item {
      padding: 0.375rem 1rem;
      
      &:not(.empty-title) {
        &:hover {
          cursor: pointer;
          background-color: var(--bulma-scheme-main-ter, #f5f5f5);
        }
      }
      
      &.empty-title {
        color: var(--bulma-input-disabled-color, #7a7a7a);
        text-align: center;
        
        &:hover {
          background: inherit;
          color: var(--bulma-input-disabled-color, #7a7a7a);
        }
      }
      
      mark {
        &.is-highlighted {
          background-color: var(--bulma-warning, #ffdd57);
          padding: 0;
        }
      }
    }
  }
  
  &.is-small {
    .tag {
      font-size: 0.75rem;
    }
    
    .input {
      @include mx.control-small;
    }
  }
  
  &.is-medium {
    .tag {
      font-size: 1.25rem;
    }
    
    .input {
      @include mx.control-medium;
    }
  }
  
  &.is-large {
    .tag {
      font-size: 1.5rem;
    }
    
    .input {
      @include mx.control-large;
    }
  }
  
  &.is-disabled,
  &[disabled] {
    background-color: var(--bulma-input-disabled-background-color, #f5f5f5);
    border-color: var(--bulma-input-disabled-border-color, #dbdbdb);
    box-shadow: none;
    color: var(--bulma-input-disabled-color, #7a7a7a);
    cursor: not-allowed;
    
    .tag {
      background-color: color.adjust(dv.$primary, $lightness: 5%);
      color: var(--bulma-input-disabled-color, #7a7a7a);
      cursor: not-allowed;
      
      .delete {
        background-color: color.adjust(dv.$background, $lightness: -5%);
        box-shadow: none;
        color: var(--bulma-input-disabled-color, #7a7a7a);
        cursor: not-allowed;
      }
    }
    
    .input {
      background-color: var(--bulma-input-disabled-background-color, #f5f5f5);
      border-color: var(--bulma-input-disabled-border-color, #dbdbdb);
      box-shadow: none;
      color: var(--bulma-input-disabled-color, #7a7a7a);
      
      &::placeholder {
        color: var(--bulma-input-disabled-placeholder-color, rgba(122, 122, 122, 0.3));
      }
    }
  }
  
  &[readonly] {
    .input {
      box-shadow: none;
    }
  }
  
  &.is-active {
    .dropdown-menu {
      display: block;
    }
  }
}

@keyframes blinker {
  0% {
    opacity: 1.0;
  }
  50% {
    opacity: 0.0;
  }
  100% {
    opacity: 1.0;
  }
}
