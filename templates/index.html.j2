<!doctype html>
<html data-theme="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Flibberflow Dashboard</title>
    <link rel="stylesheet" href="/build/css/app.css">
    <script src="https://unpkg.com/htmx.org@2.0.4"></script>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  </head>
  <body>
    <!-- Navbar -->
    <nav class="navbar" role="navigation" aria-label="main navigation">
      <div class="navbar-brand">
        <a class="navbar-item" href="#">
          <strong>Flibberflow</strong>
        </a>
        
        <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbarBasic">
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </a>
      </div>

      <div id="navbarBasic" class="navbar-menu">
        <div class="navbar-start">
          <a class="navbar-item" href="#">
            Dashboard
          </a>
          
          <a class="navbar-item" href="#">
            Chats
          </a>
          
          <div class="navbar-item has-dropdown is-hoverable">
            <a class="navbar-link">
              More
            </a>
            
            <div class="navbar-dropdown">
              <a class="navbar-item" href="#">
                Settings
              </a>
              <a class="navbar-item" href="#">
                Help
              </a>
              <hr class="navbar-divider">
              <a class="navbar-item" href="#">
                Report an issue
              </a>
            </div>
          </div>
        </div>

        <div class="navbar-end">
          <div class="navbar-item">
            <a class="theme-toggle" onclick="toggleTheme()">
              <span class="icon">
                <i class="fas fa-moon"></i>
              </span>
              <span class="theme-text">Light Mode</span>
            </a>
          </div>
        </div>
      </div>
    </nav>
    <div class="columns is-gapless is-mobile main-layout">
      <!-- Left Sidebar -->
      <div id="left-sidebar" class="column is-narrow sidebar">
        <div class="sidebar-toggle" onclick="toggleSidebar('left-sidebar')">
           <span class="icon is-medium">
              <span class="fa-stack fa-sm">
                <i class="fas fa-circle fa-stack-2x"></i>
                <i class="fas fa-flag fa-stack-1x fa-inverse"></i>
              </span>
            </span>
        </div>
        <div class="sidebar-content">
            <aside class="menu">
              <p class="menu-label">Navigation

              </p>
              <ul class="menu-list">
                <li><a href="#">Dashboard</a></li>
                <li><a href="#">Chats</a></li>
                <li><a href="#">Settings</a></li>
              </ul>
              <p class="menu-label">History</p>
              <ul class="menu-list">
                <li><a href="#">Chat 1</a></li>
                <li><a href="#">Chat 2</a></li>
                <li><a href="#">Chat 3</a></li>
              </ul>
            </aside>
        </div>
      </div>

      <!-- Main Content -->
      <div class="column main-content">
        <section class="section">
          <div class="container">
            <h1 class="title">Chat Application</h1>
            <p class="subtitle">Central Console</p>
            <div class="box chat-container">
              <div id="chat-messages" class="chat-messages">
                <!-- Chat messages will appear here -->
                <div class="welcome-message">
                  <p>Welcome to Flibberflow Chat! Start a conversation below.</p>
                </div>
              </div>
            </div>
            
            <!-- Chat Input Section -->
            <div class="chat-input-container">
              <div class="columns">
                <div class="column is-3">
                  <div class="field">
                    <label class="label">Model</label>
                    <div class="control">
                      <div class="select is-fullwidth">
                        <select id="model-selector">
                          <option value="gpt-4">GPT-4</option>
                          <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
                          <option value="claude-3">Claude 3</option>
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="column is-3">
                  <div class="field">
                    <label class="label">Strategy</label>
                    <div class="control">
                      <div class="select is-fullwidth">
                        <select id="strategy-selector">
                          <option value="default">Default</option>
                          <option value="creative">Creative</option>
                          <option value="precise">Precise</option>
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="column is-6">
                  <div class="field utility-buttons">
                    <label class="label">Utilities</label>
                    <div class="buttons">
                      <button class="button is-small" title="Clear chat">
                        <span class="icon">
                          <i class="fas fa-trash-alt"></i>
                        </span>
                      </button>
                      <button class="button is-small" title="Save conversation">
                        <span class="icon">
                          <i class="fas fa-save"></i>
                        </span>
                      </button>
                      <button class="button is-small" title="Export as PDF">
                        <span class="icon">
                          <i class="fas fa-file-pdf"></i>
                        </span>
                      </button>
                      <button class="button is-small" title="Settings">
                        <span class="icon">
                          <i class="fas fa-cog"></i>
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              
              <form id="chat-form" hx-post="/chat" hx-target="#chat-messages" hx-swap="beforeend" hx-on::after-request="this.reset(); startTimer();">
                <div class="field">
                  <div class="control">
                    <textarea id="chat-input" name="message" class="textarea" placeholder="Type your message here..." rows="3" required></textarea>
                  </div>
                </div>
                <div class="field is-grouped is-grouped-right">
                  <div class="control">
                    <button type="submit" class="button is-primary">
                      <span class="icon">
                        <i class="fas fa-paper-plane"></i>
                      </span>
                      <span>Send</span>
                    </button>
                  </div>
                  <div class="control timer-container">
                    <span id="response-timer" class="is-hidden">0.0s</span>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </section>
      </div>

      <!-- Right Drawer -->
      <div id="right-drawer" class="column is-narrow sidebar right-drawer">
        <div class="sidebar-content" style="float: right;">
            <aside class="menu">
                <p class="menu-label">
                    Right Drawer
                </p>
            </aside>
        </div>
        <div class="sidebar-toggle"  onclick="toggleSidebar('right-drawer')">
          <span>&gt;</span>
        </div>
      </div>
    </div>

    <script>
      function toggleSidebar(sidebarId) {
        const sidebar = document.getElementById(sidebarId);
        sidebar.classList.toggle('collapsed');
      }
      
      function toggleTheme() {
        const html = document.documentElement;
        const currentTheme = html.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        html.setAttribute('data-theme', newTheme);
        
        // Update toggle button text and icon
        const themeIcon = document.querySelector('.theme-toggle .icon i');
        const themeText = document.querySelector('.theme-toggle .theme-text');
        
        if (newTheme === 'dark') {
          themeIcon.className = 'fas fa-sun';
          themeText.textContent = 'Light Mode';
        } else {
          themeIcon.className = 'fas fa-moon';
          themeText.textContent = 'Dark Mode';
        }
        
        // Save preference to localStorage
        localStorage.setItem('theme', newTheme);
      }
      
      // Timer functionality
      let timerInterval;
      let startTime;
      
      function startTimer() {
        // Clear any existing timer
        if (timerInterval) {
          clearInterval(timerInterval);
        }
        
        const timerElement = document.getElementById('response-timer');
        timerElement.classList.remove('is-hidden');
        startTime = Date.now();
        
        timerInterval = setInterval(() => {
          const elapsedTime = (Date.now() - startTime) / 1000;
          timerElement.textContent = elapsedTime.toFixed(1) + 's';
        }, 100);
      }
      
      function stopTimer() {
        if (timerInterval) {
          clearInterval(timerInterval);
          timerInterval = null;
        }
      }
      
      // Initialize theme from localStorage
      document.addEventListener('DOMContentLoaded', () => {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
          document.documentElement.setAttribute('data-theme', savedTheme);
          
          // Update toggle button to match current theme
          const themeIcon = document.querySelector('.theme-toggle .icon i');
          const themeText = document.querySelector('.theme-toggle .theme-text');
          
          if (savedTheme === 'dark') {
            themeIcon.className = 'fas fa-sun';
            themeText.textContent = 'Light Mode';
          } else {
            themeIcon.className = 'fas fa-moon';
            themeText.textContent = 'Dark Mode';
          }
        }
        
        // Initialize navbar burger menu
        const navbarBurgers = document.querySelectorAll('.navbar-burger');
        navbarBurgers.forEach(burger => {
          burger.addEventListener('click', () => {
            const target = document.getElementById(burger.dataset.target);
            burger.classList.toggle('is-active');
            target.classList.toggle('is-active');
          });
        });
      });
    </script>
  <script type="module" src="/build/js/app.js"></script>
  </body>
</html>
